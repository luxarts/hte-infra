version: '3'

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      htenetwork:
        aliases:
          - redis
  postgres:
    image: postgres:alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ../hte-location-ms/migrations/locations.sql:/docker-entrypoint-initdb.d/locations.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      htenetwork:
        aliases:
          - postgres
  mongodb:
    image: mongo
    ports:
      - "27017:27017"
    networks:
      htenetwork:
        aliases:
          - mongodb
  device_update_dispatcher:
    build: ../../hte-device-update-dispatcher
    ports:
      - "9000:8080"
      - "9091:8081"
    environment:
      - REDIS_HOST=redis:6379
    depends_on:
      - redis
    networks:
      htenetwork:
        aliases:
          - device_update_dispatcher
  device_update_consumer:
    build: ../../hte-device-update-consumer
    ports:
      - "9092:8081"
    environment:
      - REDIS_HOST=redis:6379
      - API_LOCATION_HOST=http://location_ms:8080
      - API_STATUS_HOST=http://status_ms:8080
      - BLPOP_TIMEOUT=10
    depends_on:
      - redis
      - location_ms
      - status_ms
    networks:
      htenetwork:
        aliases:
          - device_update_consumer
  location_ms:
    build: ../../hte-location-ms
    ports:
      - "9003:8080"
      - "9093:8081"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=postgres:5432
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      htenetwork:
        aliases:
          - location_ms
  status_ms:
    build: ../../hte-status-ms
    ports:
      - "9004:8080"
      - "9094:8081"
    environment:
      - MONGO_HOST=mongodb:27017
    depends_on:
      - mongodb
    networks:
      htenetwork:
        aliases:
          - status_ms
  grafana:
    image: grafana/grafana-oss
    ports:
      - "3000:3000"
    networks:
      htenetwork:
        aliases:
          - grafana
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      htenetwork:
        aliases:
          - prometheus
